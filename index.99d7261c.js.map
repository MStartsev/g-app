{"mappings":"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","sources":["src/js/script.js"],"sourcesContent":["// <script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"></script>\n//\nlet base = []; //\n\nvar ExcelToJSON = function () {\n  this.parseExcel = function (file) {\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      var data = e.target.result;\n      var workbook = XLSX.read(data, {\n        type: \"binary\",\n      });\n\n      exelToObj(workbook);\n    };\n\n    reader.onerror = function (ex) {\n      console.log(ex);\n    };\n\n    reader.readAsBinaryString(file);\n  };\n};\n\nfunction handleFileSelect(evt) {\n  var files = evt.target.files; // FileList object\n  var xl2json = new ExcelToJSON();\n  try {\n    xl2json.parseExcel(files[0]);\n  } catch (error) {\n    xl2json.parseExcel(evt.dataTransfer.files[0]);\n  }\n}\n\nfunction exelToObj(exselObj) {\n  let contentMap = new Map();\n  let activeSheet = [0];\n  let stopParseSpec = false;\n  if (Object.values(exselObj)[5][\"Для цеху\"]) {\n    activeSheet = \"Для цеху\";\n  }\n  //Нoмер специфікації та замовник\n  let specification = new Specification();\n  specification.Num = specification.Num(exselObj, activeSheet) || \"БЕЗ НОМЕРУ\";\n  if (specification.Num == \"БЕЗ НОМЕРУ\") {\n    stopParseSpec = true;\n    alert(\"УВАГА!\\n ВІДСУТНІ ЗАГОЛОВКИ: \\n Номер Специфікації.\");\n    return;\n  }\n  specification.Client =\n    specification.Client(exselObj, activeSheet) || \"Відсутній клієнт\";\n  if (specification.Client == \"Відсутній клієнт\") {\n    stopParseSpec = true;\n    alert(\"УВАГА!\\n ВІДСУТНІ ЗАГОЛОВКИ: \\n Замовник.\");\n    return;\n  }\n  //Адреси заголовків\n  specification.titlesAdr.Marking =\n    specification.titlesAdr(exselObj, activeSheet, /Маркування/i) || \"-\";\n  specification.titlesAdr.Metall =\n    specification.titlesAdr(exselObj, activeSheet, /Вибір металу:/i) || \"-\";\n  specification.titlesAdr.Material =\n    specification.titlesAdr(exselObj, activeSheet, /Матеріали/i) || \"-\";\n  specification.titlesAdr.Mat =\n    specification.titlesAdr(exselObj, activeSheet, /Використати мат:/i) || \"-\";\n\n  specification.titlesAdr.MarkingSTOP = () => {\n    if (specification.titlesAdr.Marking == \"-\") {\n      alert(\"УВАГА!\\n ВІДСУТНІ ЗАГОЛОВКИ: \\n Маркування.\");\n    }\n    if (specification.titlesAdr.Metall != \"-\") {\n      return specification.titlesAdr.Metall[1].valueOf();\n    } else if (specification.titlesAdr.Material != \"-\") {\n      return specification.titlesAdr.Material[1].valueOf();\n    } else if (specification.titlesAdr.Mat != \"-\") {\n      return specification.titlesAdr.Mat[1].valueOf();\n    } else {\n      stopParseSpec = true;\n      alert(\n        \"УВАГА!\\n ВІДСУТНІ ЗАГОЛОВКИ: \\n Вибір металу, Матеріали, Використати мат.\"\n      );\n      return 0;\n    }\n  };\n\n  specification.titlesAdr.Name = specification.titlesAdr(\n    exselObj,\n    activeSheet,\n    /Назва/i\n  ) || [\"z\", \"1\"];\n  specification.titlesAdr.Length = specification.titlesAdr(\n    exselObj,\n    activeSheet,\n    /Довжина/i\n  ) || [\"z\", \"1\"];\n  specification.titlesAdr.Width = specification.titlesAdr(\n    exselObj,\n    activeSheet,\n    /Ширина/i\n  ) || [\"z\", \"1\"];\n  specification.titlesAdr.Quantity = specification.titlesAdr(\n    exselObj,\n    activeSheet,\n    /Кількість/i\n  ) || [\"z\", \"1\"];\n  specification.titlesAdr.Notes = specification.titlesAdr(\n    exselObj,\n    activeSheet,\n    /Примітки/i\n  ) || [\"z\", \"1\"];\n  specification.titlesAdr.Notch = specification.titlesAdr(\n    exselObj,\n    activeSheet,\n    /Вирізи/i\n  ) || [\"z\", \"1\"];\n  //[\"z\",\"1\"] -у випадку, якщо не знайдено заголовок\n\n  let nameCell =\n    \"S\" +\n    specification.Num.replace(/([ЗМІНА]{5}\\d*)/g, \"_$1_\") +\n    \"___\" +\n    specification.Client;\n  nameCell =\n    nameCell.replace(/[\\s]/g, \"\").replace(/[/]/g, \"_\").replace(/[\"]/g, \"__\") +\n    [];\n  console.log(nameCell, base);\n\n  base.push(nameCell);\n  base.push(specification.Num);\n  base.push(specification.Client);\n  base.push(detailsMarking()); //запис Маркування + характеристики деталей\n  base.push([]); // для подальших записів ВТК\n\n  // відправка на сервер\n  function onSuccess(baseReturn) {\n    baseReturn = JSON.parse(baseReturn);\n    console.log(baseReturn);\n    var div = document.getElementById(\"output\");\n    div.innerHTML = baseReturn;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////////\n\n  postServer();\n\n  console.log(base);\n\n  // google.script.run.withSuccessHandler(onSuccess).getBase(base);\n  base = [];\n  //////////////////////////////////////////////////////////////////////////////////////////\n\n  function detailsMarking() {\n    if (!stopParseSpec) {\n      let details = [];\n      let markingSTOP =\n        specification.titlesAdr.MarkingSTOP() -\n        specification.titlesAdr.Marking[1] * 1;\n      for (let n = 1; n < markingSTOP; n++) {\n        let detail = []; // Маркування + характеристики деталі\n        let markingAdr =\n          specification.titlesAdr.Marking[0] +\n          (specification.titlesAdr.Marking[1] * 1 + n);\n        let nameAdr =\n          specification.titlesAdr.Name[0] +\n          (specification.titlesAdr.Name[1] * 1 + n);\n        let lengthAdr =\n          specification.titlesAdr.Length[0] +\n          (specification.titlesAdr.Length[1] * 1 + n);\n        let widthAdr =\n          specification.titlesAdr.Width[0] +\n          (specification.titlesAdr.Width[1] * 1 + n);\n        let quantityAdr =\n          specification.titlesAdr.Quantity[0] +\n          (specification.titlesAdr.Quantity[1] * 1 + n);\n        let notesAdr =\n          specification.titlesAdr.Notes[0] +\n          (specification.titlesAdr.Notes[1] * 1 + n);\n        let notchAdr =\n          specification.titlesAdr.Notch[0] +\n          (specification.titlesAdr.Notch[1] * 1 + n);\n\n        let tempBuffer;\n        //маркування.(Назва, Довжина, Ширина, Кількість, Примітки, Вирізи)  ( маркування [])\n        try {\n          tempBuffer = specification.tableContent(\n            exselObj,\n            activeSheet,\n            markingAdr\n          );\n          if (tempBuffer) {\n            detail.push(tempBuffer);\n            [\n              nameAdr,\n              lengthAdr,\n              widthAdr,\n              quantityAdr,\n              notesAdr,\n              notchAdr,\n            ].forEach((item) => {\n              tempBuffer = specification.tableContent(\n                exselObj,\n                activeSheet,\n                item\n              );\n              tempBuffer ? detail.push(tempBuffer) : detail.push(\"\");\n            });\n            details.push(detail);\n          }\n        } catch (e) {}\n      }\n      return details;\n    }\n  }\n}\n\nlet Specification = function () {\n  //Отримання № специфікаціі\n  this.Num = function (exselObj, activeSheet) {\n    let maxRow = 10;\n\n    let Spec =\n      /([\\u0410-\\u042F\\u0456i]{12}\\s*[\\u2116]\\s*)(\\d{1,})(\\s*-?\\d*)\\s*(\\u002F\\s*\\u0447?[\\u043e\\u0426]{0,2}\\s*\\u002F\\u0423?[\\u0415|e]?)/i;\n    let SpecTest = /[СПЕЦИФІКАЦІЯi]{12}\\s/i;\n    let SpecAnswer = \"$2$4\"; //«АФЕТ-БУД»\n\n    for (let row = 1; row < maxRow; row++) {\n      for (let column = 65; column < 90; column++) {\n        let cell = String.fromCharCode(column) + (row + \"\");\n        try {\n          if (\n            SpecTest.test(Object.values(exselObj)[5][activeSheet][cell][\"w\"])\n          ) {\n            let val = Object.values(exselObj)[5][activeSheet][cell][\"w\"];\n            val = val\n              .replace(Spec, SpecAnswer)\n              .replace(/\\s{2,}/, \"s\")\n              .replace(/[«||»]/g, '\"')\n              .toUpperCase();\n            return val;\n          }\n        } catch (error) {}\n      }\n    }\n  };\n  this.Client = function (exselObj, activeSheet) {\n    let maxRow = 10;\n\n    let zamovnyk = /\\s*([Замовник]{8}\\s*:*\\s*)([\\s\\u0410-\\u042F\\u0456A-Z]*)/i;\n    let zamovnykTest = /[Замовник]{8}\\s*:*\\s*/i;\n    let zamovnykAnswer = \"$2\";\n\n    for (let row = 1; row < maxRow; row++) {\n      for (let column = 65; column < 90; column++) {\n        let cell = String.fromCharCode(column) + (row + \"\");\n        try {\n          if (\n            zamovnykTest.test(\n              Object.values(exselObj)[5][activeSheet][cell][\"w\"]\n            )\n          ) {\n            let val = Object.values(exselObj)[5][activeSheet][cell][\"w\"];\n            val = val\n              .replace(zamovnyk, zamovnykAnswer)\n              .replace(/\\s{2,}/, \"s\")\n              .replace(/[«||»]/g, '\"')\n              .toUpperCase();\n            return val;\n          }\n        } catch (error) {}\n      }\n    }\n  };\n\n  this.titlesAdr = function (exselObj, activeSheet, titleRegEx) {\n    //отримання адреси ячейки заголовку\n    let maxRow = 10;\n    if (titleRegEx.test(\"/Вибір металу:/gi/Матеріали/ig/Використати мат:/gi\")) {\n      maxRow = 1024;\n    }\n\n    for (let row = 1; row < maxRow; row++) {\n      for (let column = 65; column < 90; column++) {\n        let cell = String.fromCharCode(column) + (row + \"\");\n        try {\n          if (\n            titleRegEx.test(Object.values(exselObj)[5][activeSheet][cell][\"w\"])\n          ) {\n            return [String.fromCharCode(column), row];\n          }\n        } catch (error) {}\n      }\n    }\n  };\n  this.tableContent = function (exselObj, activeSheet, adressCell = \"G1\") {\n    //отримання контенту з ячейки\n    try {\n      return Object.values(exselObj)[5][activeSheet][adressCell][\"w\"];\n    } catch (error) {\n      //console.error(adressCell, \": error\")\n      return false;\n    }\n  };\n};\n\n//------------------------------------------------------------------------------------------------------------------------------//\n\nfunction getServer() {\n  const url =\n    \"https://script.google.com/macros/s/AKfycbx9eFKQXavMnMh-p-ohpSV2vd3v5qL0o2TqCr9VfxvLuPFJyO8AUJtE7awTBy-M-eNv/exec\";\n\n  fetch(url)\n    .then((d) => d.json())\n    .then((d) => {\n      document.getElementById(\"app\").textContent = d[0].name;\n      console.log(d);\n    });\n}\n\ndocument.getElementById(\"btn\").addEventListener(\"click\", getServer);\n\nfunction postServer() {\n  const url =\n    \"https://script.google.com/macros/s/AKfycbx9eFKQXavMnMh-p-ohpSV2vd3v5qL0o2TqCr9VfxvLuPFJyO8AUJtE7awTBy-M-eNv/exec\";\n  // let res = [{ status: \"cool!\", work: \"Батя, я стараюсь!\" }];\n  let res = [{ name: \"Gogi\", work: \"Батя, я стараюсь!\" }];\n\n  console.info(base);\n\n  fetch(url, {\n    method: \"POST\",\n    mode: \"no-cors\",\n    cache: \"no-cache\",\n    // credential: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    direct: \"fillow\",\n    reffererPolicy: \"no-refferer\",\n    body: JSON.stringify({ spec: base }),\n  });\n}\n\ndocument.getElementById(\"btn1\").addEventListener(\"click\", postServer);\n"],"names":["base","ExcelToJSON","this","parseExcel","file","reader","FileReader","onload","e","data","target","result","exelToObj","XLSX","read","type","onerror","ex","console","log","readAsBinaryString","handleFileSelect","evt","files","xl2json","error","dataTransfer","exselObj","Map","activeSheet","stopParseSpec","Object","values","specification","Specification","Num","alert","Client","titlesAdr","Marking","Metall","Material","Mat","MarkingSTOP","valueOf","Name","Length","Width","Quantity","Notes","Notch","nameCell","replace","push","detail","markingAdr","n","nameAdr","lengthAdr","widthAdr","quantityAdr","notesAdr","notchAdr","tempBuffer","tableContent","forEach","item","details","markingSTOP","_loop","detailsMarking","postServer","Spec","SpecTest","row","column","cell","String","fromCharCode","test","val","toUpperCase","zamovnyk","zamovnykTest","titleRegEx","maxRow","adressCell","arguments","length","getServer","fetch","then","d","json","document","getElementById","textContent","name","info","method","mode","cache","headers","direct","reffererPolicy","body","JSON","stringify","spec","addEventListener"],"version":3,"file":"index.99d7261c.js.map"}