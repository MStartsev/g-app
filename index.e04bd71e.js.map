{"mappings":"AAgDA,SAASA,gBAAgBC,EAAiBC,GACxC,IAAIC,EAAmBF,EAAgBG,cAAc,qBAGjDH,EAAgBG,cAAc,uBAChCH,EAAgBG,cAAc,sBAAsBC,SAIjDF,KACHA,EAAmBG,SAASC,cAAc,QACzBC,UAAUC,IAAI,oBAC/BR,EAAgBS,YAAYP,IAG9BA,EAAiBQ,QAAQC,MAAQV,EAAKW,I,CA1DxCP,SAASQ,iBAAiB,qBAAqBC,SAAQ,SAACC,GACtD,IAAMf,EAAkBe,EAAaC,QAAQ,cAE7ChB,EAAgBiB,iBAAiB,SAAS,SAACC,GACzCH,EAAaI,O,IAGfJ,EAAaE,iBAAiB,UAAU,SAACC,GACnCH,EAAaK,MAAMC,SACrBtB,gBAAgBC,EAAiBe,EAAaK,MAAM,IACpDE,iBAAiBJ,G,IAIrBlB,EAAgBiB,iBAAiB,YAAY,SAACC,GAC5CA,EAAEK,iBACFvB,EAAgBO,UAAUC,IAAI,kB,IAGhC,CAAC,YAAa,WAAWM,SAAQ,SAACU,GAChCxB,EAAgBiB,iBAAiBO,GAAM,SAACN,GACtClB,EAAgBO,UAAUH,OAAO,kB,OAIrCJ,EAAgBiB,iBAAiB,QAAQ,SAACC,GACxCA,EAAEK,iBACEL,EAAEO,aAAaL,MAAMC,SACvBN,EAAaK,MAAQF,EAAEO,aAAaL,MACpCrB,gBAAgBC,EAAiBkB,EAAEO,aAAaL,MAAM,IACtDE,iBAAiBJ,IAGnBlB,EAAgBO,UAAUH,OAAO,kB","sources":["src/js/dd.js"],"sourcesContent":["{\n  /* <script> */\n}\n//drag&drop script\n\ndocument.querySelectorAll(\".drop-zone__input\").forEach((inputElement) => {\n  const dropZoneElement = inputElement.closest(\".drop-zone\");\n\n  dropZoneElement.addEventListener(\"click\", (e) => {\n    inputElement.click();\n  });\n\n  inputElement.addEventListener(\"change\", (e) => {\n    if (inputElement.files.length) {\n      updateThumbnail(dropZoneElement, inputElement.files[0]);\n      handleFileSelect(e); // parser exel\n    }\n  });\n\n  dropZoneElement.addEventListener(\"dragover\", (e) => {\n    e.preventDefault();\n    dropZoneElement.classList.add(\"drop-zone--over\");\n  });\n\n  [\"dragleave\", \"dragend\"].forEach((type) => {\n    dropZoneElement.addEventListener(type, (e) => {\n      dropZoneElement.classList.remove(\"drop-zone--over\");\n    });\n  });\n\n  dropZoneElement.addEventListener(\"drop\", (e) => {\n    e.preventDefault();\n    if (e.dataTransfer.files.length) {\n      inputElement.files = e.dataTransfer.files;\n      updateThumbnail(dropZoneElement, e.dataTransfer.files[0]);\n      handleFileSelect(e); // parser exel\n    }\n\n    dropZoneElement.classList.remove(\"drop-zone--over\");\n  });\n});\n\n/**\n * Updates the thumbnail on a drop zone element.\n *\n * @param {HTMLElement} dropZoneElement\n * @param {File} file\n */\nfunction updateThumbnail(dropZoneElement, file) {\n  let thumbnailElement = dropZoneElement.querySelector(\".drop-zone__thumb\");\n\n  // First time - remove the prompt\n  if (dropZoneElement.querySelector(\".drop-zone__prompt\")) {\n    dropZoneElement.querySelector(\".drop-zone__prompt\").remove();\n  }\n\n  // First time - there is no thumbnail element, so lets create it\n  if (!thumbnailElement) {\n    thumbnailElement = document.createElement(\"div\");\n    thumbnailElement.classList.add(\"drop-zone__thumb\");\n    dropZoneElement.appendChild(thumbnailElement);\n  }\n\n  thumbnailElement.dataset.label = file.name;\n\n  // Show thumbnail for image files\n  //   if (file.type.startsWith(\"image/\")) {\n  //     const reader = new FileReader();\n\n  //     reader.readAsDataURL(file);\n  //     reader.onload = () => {\n  //       thumbnailElement.style.backgroundImage = `url('${reader.result}')`;\n  //     };\n  //   } else {\n  //     thumbnailElement.style.backgroundImage = null;\n  //   }\n}\n\n// </script>\n"],"names":["updateThumbnail","dropZoneElement","file","thumbnailElement","querySelector","remove","document","createElement","classList","add","appendChild","dataset","label","name","querySelectorAll","forEach","inputElement","closest","addEventListener","e","click","files","length","handleFileSelect","preventDefault","type","dataTransfer"],"version":3,"file":"index.e04bd71e.js.map"}